<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on FROM THE DARK PAST</title>
    <link>https://imlauera.github.io/tags/c/</link>
    <description>Recent content in c on FROM THE DARK PAST</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language><atom:link href="https://imlauera.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aprendiendo punteros en C</title>
      <link>https://imlauera.github.io/post/aprendiendo_c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imlauera.github.io/post/aprendiendo_c/</guid>
      <description>Ejemplo #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt; char *printLocalTime() { char *timeStringBuff=malloc(30); //50 chars should be enough  //char timeStringBuff[100]; //50 chars should be enough  char *mic = &amp;#34;2022&amp;#34;; char c = &amp;#39;m&amp;#39;; int test = 1; char prueba[50]; char *prueba_m = malloc(50); printf(&amp;#34;%d\n&amp;#34;,sizeof(prueba)); printf(&amp;#34;%d\n&amp;#34;,sizeof(prueba_m)); sprintf(timeStringBuff, &amp;#34;they tried everything %s %d\n&amp;#34;,mic,test); //Optional: Construct String object  // Esto retorna un puntero a la direccion de memoria en donde esta timeStringBuff  // *timeStringBuff = timeStringBuff[0]  // *(timeStringBuff+3) = timeStringBuff[3]  printf(&amp;#34;%s\n&amp;#34;,timeStringBuff); // Vos no retornas la palabra cuando ejecutas return timeStringBufff retornas un puntero  // que apunta a la primer letra del char.</description>
    </item>
    
  </channel>
</rss>
