<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programacion on FROM THE DARK PAST</title>
    <link>https://imlauera.github.io/categories/programacion/</link>
    <description>Recent content in programacion on FROM THE DARK PAST</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Wed, 02 Nov 2022 01:44:21 -0300</lastBuildDate><atom:link href="https://imlauera.github.io/categories/programacion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Instalacion y Hola Mundo en Zig</title>
      <link>https://imlauera.github.io/post/zig_programming_language/</link>
      <pubDate>Wed, 02 Nov 2022 01:44:21 -0300</pubDate>
      
      <guid>https://imlauera.github.io/post/zig_programming_language/</guid>
      <description>Instalación Lo descargan desde https://ziglang.org/download/ Descomprimen el tar.xz con
$ tar -xvf nombre_del_archivo.tar.xz En este caso descargaremos e instalaremos la ultima version que es la 0.11.0 puede ser que al momento que usted este leyendo esta publicacion exista una nueva version.
$ cd ~ $ wget https://ziglang.org/builds/zig-linux-x86_64-0.11.0-dev.11+0d192ee9e.tar.xz -O zig.tar.xz &amp;amp;&amp;amp; tar -xvf zig.tar.xz Luego solo basta con linkearlo desde /usr/bin para agregarlo al PATH usando ln
$ cd /usr/bin $ sudo ln -s ~/zig-linux-x86_64-0.</description>
    </item>
    
    <item>
      <title>Copilot fue hecho para robar codigo, ¿el fin de la programacion web?</title>
      <link>https://imlauera.github.io/post/sobre_copilot/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://imlauera.github.io/post/sobre_copilot/</guid>
      <description>Robo de codigo GitHub Copilot se creó a partir del robo de código en Github, ignorando las licencias establecidas en repositorios como, por ejemplo, GPLv2, usando IA como un truco para el código de lavado de licencias. Copilot ha anunciado sus planes para convertirse en un servicio de pago.
Por lo tanto, este producto que no sería posible sin el código público de código abierto será en sí mismo no público, de código cerrado y de datos cerrados.</description>
    </item>
    
    <item>
      <title>Aprendiendo punteros en C</title>
      <link>https://imlauera.github.io/post/aprendiendo_c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imlauera.github.io/post/aprendiendo_c/</guid>
      <description>Ejemplo #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt; char *printLocalTime() { char *timeStringBuff=malloc(30); //50 chars should be enough  //char timeStringBuff[100]; //50 chars should be enough  char *mic = &amp;#34;2022&amp;#34;; char c = &amp;#39;m&amp;#39;; int test = 1; char prueba[50]; char *prueba_m = malloc(50); printf(&amp;#34;%d\n&amp;#34;,sizeof(prueba)); printf(&amp;#34;%d\n&amp;#34;,sizeof(prueba_m)); sprintf(timeStringBuff, &amp;#34;they tried everything %s %d\n&amp;#34;,mic,test); //Optional: Construct String object  // Esto retorna un puntero a la direccion de memoria en donde esta timeStringBuff  // *timeStringBuff = timeStringBuff[0]  // *(timeStringBuff+3) = timeStringBuff[3]  printf(&amp;#34;%s\n&amp;#34;,timeStringBuff); // Vos no retornas la palabra cuando ejecutas return timeStringBufff retornas un puntero  // que apunta a la primer letra del char.</description>
    </item>
    
    <item>
      <title>Aprendiendo Svelte3</title>
      <link>https://imlauera.github.io/post/aprendiendo-svelte3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imlauera.github.io/post/aprendiendo-svelte3/</guid>
      <description>DOM event handlers can have modifiers that alter their behaviour. For example, a handler with a once modifier will only run a single time:
&amp;lt;script&amp;gt; function handleClick() { alert(&amp;#39;clicked&amp;#39;) } &amp;lt;/script&amp;gt; &amp;lt;button on:click={handleClick}&amp;gt; Click me &amp;lt;/button&amp;gt; </description>
    </item>
    
    <item>
      <title>Calcular costo de envio CorreoArgentino</title>
      <link>https://imlauera.github.io/post/2022-07-12-como-calcular-costo-de-envio-correoargentino/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imlauera.github.io/post/2022-07-12-como-calcular-costo-de-envio-correoargentino/</guid>
      <description>Es increíble que el servicio de paqueteria ecommerse (paq.ar) de CorreoArgentino todavia no haya desarrollado una API para calcular el costo de envío a diferentes partes del país, en lugar de una API te dan un PDF en donde se muestran dos tablas; una tabla tiene los diferentes pesos del producto, las zonas y sus respetivos precios y la otra con el país de origen y de destino y las diferentes zonas correspondientes.</description>
    </item>
    
  </channel>
</rss>
